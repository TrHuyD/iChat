@page "/chat/{ServerId}/{RoomId}"
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Threading.Channels
@using iChat.Client.DTOs.Chat
@using iChat.Client.Data
@using iChat.Client.Services.UserServices.Chat
@using iChat.DTOs.Users.Messages
@inject ChatMessageCacheService MessageManager
@inject ChatSignalRClientService ChatService
@inject UserStateService _userInfo
@inject NavigationManager _navigation
@inject IJSRuntime JS
@implements IDisposable
@implements IAsyncDisposable

<div class="chat-container" @onclick="HideContextMenu" @onkeydown="HandleEscapeKey">
    <div class="chat-header">
        <h3>Chat Room @RoomId</h3>
        <div class="connection-status">
            <span class="@_connectionStatusClass">@_connectionStatus</span>
        </div>

        <div class="chat-toolbar">
            <button class="chat-toolbar-button"
                    @onclick="TriggerLoadOlderHistoryRequest"
                    disabled="@(_isLoading || _isOldHistoryRequestButtonDisabled)">
                @if (_isLoading)
                {
                    <span class="spinner"></span>
                }
                else
                {
                    <span>Special</span>
                }
            </button>

            <button class="chat-toolbar-button" disabled>Action 2</button>
            <button class="chat-toolbar-button" disabled>Action 3</button>
            <button class="chat-toolbar-button" disabled>Action 4</button>
        </div>
    </div>


    <div class="messages-container" @ref="_messagesContainer"
         @onscroll="HandleScroll"
         style="overflow-y: scroll; height: calc(100vh - 150px);">
        <Virtualize Items="@_messages.Values" Context="item" ItemSize="80">
            <div class="@item.CssClass"
                 id="message-@item.Message.Id"
                 @oncontextmenu="(e => ShowContextMenu(e, item.Message.Id))"
                 @oncontextmenu:preventDefault
                 @key="item.Message.Id">

                @if (!string.IsNullOrEmpty(item.Icon))
                {
                    <span class="message-icon">@item.Icon</span>
                }

                <div class="message-content">@item.Content</div>

                @if (item.ShowTimestamp)
                {
                    <div class="message-time">@item.Message.CreatedAt.LocalDateTime.ToString("g")</div>
                }
            </div>
        </Virtualize>

    </div>

    @if (_showContextMenu)
    {
        <div class="context-menu" style="@_contextMenuStyle" @onclick:stopPropagation="true">
            <div class="context-item" @onclick="CopyMessageId">Copy Message ID</div>
            <div class="context-item" @onclick="ScrollToContextMessage">Scroll to Message</div>
        </div>
    }

    <div class="message-input">
        <input type="text" @bind="_newMessage" @bind:event="oninput"
               placeholder="Type your message..." @onkeypress="HandleKeyPress" />
        <button @onclick="SendMessage">Send</button>
    </div>
</div>

