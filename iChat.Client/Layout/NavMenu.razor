@using iChat.Client.DTOs.Chat
@using iChat.Client.Modals.Servers
@using iChat.Client.Modals.User
@using iChat.Client.Services.UserServices
@using iChat.Client.Services.UserServices.Chat
@using iChat.Client.Services.UserServices.Chat.Util
@using iChat.Client.Services.UserServices.ChatService
@using iChat.DTOs.Users
@using iChat.DTOs.Users.Messages
@inject ChatNavigationService ChatNavService
@inject UserStateService LoadingService
@inject NavigationManager Navigation
@inject LastVisitedChannelService ChannelTracker
@inject ChatMessageCacheService MessageManager
@inject ChatSignalRClientService ChatService
@inject UserMetadataService _userMetadataService
@inject InviteService InviteService
@inject ProfileModalService profileChanger
@inject IJSRuntime JS
@inject iChat.Client.Services.Auth.JwtAuthHandler _https
@implements IDisposable




<div class="discord-nav" @onclick="HideContextMenu">
    <div class="sc-sidebars">
    <!-- Server List (Left Sidebar) -->
        <div class="server-sidebar">
        <!-- Home Button -->
        <div class="server-icon home-icon">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All" @onclick="ClearServerSelection">
                <i class="fas fa-home"></i>
            </NavLink>
        </div>

        <!-- Server List -->
        <div class="server-list">
            @foreach (var server in ChatNavService.ChatServers)
            {
                <div class="server-icon @(_selectedServer?.Id == server.Id ? "active" : "")" 
                     @onclick="() => ShowChannelList(server.Id)"
                     @oncontextmenu="(e) => ShowServerContextMenu(e, server)"
                     @oncontextmenu:preventDefault="true">
                    <img src="@server.AvatarUrl" alt="@server.Name" />
                </div>
            }
        </div>
        <!-- Add Server Button -->
        <div class="server-icon add-server" @onclick="() => showCreateServer = true">
            <i class="fas fa-plus"></i>
        </div>
    </div>
    
    <!-- Channel Sidebar (with resizable wrapper) -->
    <div class="channel-sidebar-wrapper">
        <div class="channel-sidebar">
            @if (_selectedServer != null)
            {
                <div class="sidebar-header">
                    <h3>@_selectedServer.Name</h3>
                    <button class="sidebar-toggle" @onclick:stopPropagation @onclick="(e) => ShowServerDropdown(e)">
                        <i class="fas fa-chevron-down"></i>
                    </button>
                </div>

                <div class="channel-scrollable">
                    <div class="channel-category">
                        <div class="category-header">
                            <span>CHANNELS</span>
                        </div>

                        <div class="channel-list">
                            @foreach (var channel in _selectedServer.Channels.OrderBy(c => c.Order))
                            {
                                <div class="channel-item @(channel.Id == _selectedChannelId ? "active" : "")" 
                                     @onclick="() => NavigateToChannel(_selectedServer.Id, channel.Id)">
                                    <span class="channel-prefix">#</span>
                                    <span class="channel-name">@channel.Name</span>
                                </div>
                            }

                            @if (_selectedServer.isadmin)
                            {
                                <div class="channel-item add-channel" @onclick="() => showCreateChannel = true">
                                    <span class="channel-prefix">+</span>
                                    <span class="channel-name">Create Channel</span>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="sidebar-header">
                    <h3>Home</h3>
                </div>
                <div class="channel-scrollable">
                    <div class="channel-category">
                        <div class="channel-list">
                            <div class="channel-item">Friends / Placeholder</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
     </div>
    <!-- User Box -->
    <div class="user-box">

        <img class="avatar" src="@userProfileDto.AvatarUrl" />
        <div class="user-info">
            <div class="username">@userProfileDto.Name</div>
            <div class="status">Online</div>
        </div>
        <div class="user-actions">
        @*     <i class="fas fa-microphone-slash"></i>
            <i class="fas fa-headphones"></i> *@
            <i class="fas fa-cog" @onclick="OpenProfileModal"></i>
        </div>
    </div>
</div>




<ServerMenuModal IsVisible="@_showServerMenu" 
                 IsVisibleChanged="@((val) => _showServerMenu = val)"
                 Server="@_contextMenuServer"
                 ContextMenuX="@_contextMenuX"
                 ContextMenuY="@_contextMenuY"
                 OnLeaveServer="@HandleLeaveServer"
                 OnInviteUser="@HandleInviteUser" />

<CreateServerModal IsVisible="@showCreateServer" IsVisibleChanged="@((val) => showCreateServer = val)" />
<CreateChannelModal IsVisible="@showCreateChannel" IsVisibleChanged="@((val) => showCreateChannel = val)" ServerId="@SelectedServerId" />




